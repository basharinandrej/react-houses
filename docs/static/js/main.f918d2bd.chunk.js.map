{"version":3,"sources":["UI/Indicator/Indicator.jsx","components/Aside/AsideList/AsideListItem/AsideListItem.jsx","components/Aside/AsideList/AsideList.jsx","helpers/firebaseInit.js","redux/actions/actionType.js","redux/actions/places.js","redux/actions/inventory.js","components/Aside/Aside.jsx","components/Main/ListPlaceChildrenInventory/ListPlaceChildrenInventory.jsx","components/Main/PlaceChildren/PlaceChildren.jsx","components/Main/ListPlaceInventory/ListPlaceInventory.jsx","UI/Button/Button.jsx","components/Main/Main.jsx","App.js","redux/helpers/places.js","redux/reducers/places.js","redux/helpers/inventory.js","redux/services/inventory.js","redux/reducers/inventory.js","redux/reducers/rootReducer.js","redux/sagas/sagas.js","redux/sagas/rootSaga.js","index.js"],"names":["Indicator","props","cls","stateIndicator","push","className","join","AsideListItem","place","renderLists","placesItems","allPlaceIdWithHasInventory","includes","id","find","el","data","name","parts","AsideList","onClick","e","onClickPlaceHandler","call","context","this","places","map","housesId","Component","connect","state","inventory","FB","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","START_FETCH_PLACES","SUCCESS_FETCH_PLACES","ERROR_FETCH_PLACES","START_FETCH_INVENTORY","SUCCESS_FETCH_INVENTORY","ERROR_FETCH_INVENTORY","REMOVE_INVENTORY_ITEM","ADD_INVENTORY_ITEM","UPDATE_INVENTORY_ITEM","SET_CURRENT_INVENTORY","SET_CURRENT_PLACE","SET_CHILDREN_PLACE_WITH_HAS_INVENTORY","SET_INVENTORY_PLACE_CHILDREN","ALL_PLACE_ID_WITH_HAS_INVENTORY","startFetchPlaces","type","successFetchPlaces","errorFetchPlaces","error","successFetchInventory","inventoryItems","errorFetchInventory","setInventoryCurrentPlace","placeId","setInventoryPlaceChildren","childrenPlaceHasInventoryArray","removeInventoryItem","Aside","fetchPlaces","fetchInventory","event","stopPropagation","target","setCurrentPlace","setPlaceChildrenHasInventory","filter","part","flattenInCommonArray","allPlacesId","allPartsId","getIdParts","array","getIdHouses","isLoading","renderListHouses","dispatch","a","firestore","collection","get","response","docs","x","console","log","ListPlaceChildrenInventory","childrenInventory","count","PlaceChildren","childrenPlace","childrenPlaceId","ListPlaceInventory","window","confirm","editInventoryItem","idCurrentPlace","contentIteration","item","removeInventoryHandler","editInventoryHandler","currentPlace","Button","children","Main","hasNotChildrenPlace","length","hasCurrentInventory","currentInventory","hasCurrentPlace","addInventoryItemHandler","addInventoryItem","bind","App","findCurrentPlace","findAllPlaceIdWithHasInventory","findDeepRecursionPlaceId","uniq","findPlaceChildrenWithHasInventory","partsIdAtPlaceChildren","forEach","flattenPartsIdPlaceChildrenInCommonArray","idPlaceChildrenHasInventory","getIdPlaceChildrenHasInventory","i","initialState","action","findInventoryCurrentPlace","findInventoryPlaceChildren","idChildrenPlaceHasInventoryArray","idChildren","inventoryItem","doc","delete","then","info","fetchRemoveInventoryItem","prompt","objInventory","Math","random","toString","fileStore","set","fetchAddInventoryItem","updateInventoryItem","fetchUpdateInventoryItem","newInventory","combineReducers","require","allPlaceIdWithHasInventoryWatcher","addInventoryWatcher","removeInventoryWatcher","allPlaceIdWithHasInventoryWorker","setPlaceChildrenHasInventoryWatcher","setPlaceChildrenHasInventoryWorker","updateInventoryItemWatcher","updateInventoryItemWorker","getPlacesItems","getInventoryItems","getChildrenPlaceHasInventoryArray","getCurrentPlace","takeEvery","select","put","rootSaga","all","saga","createSagaMiddleware","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","run","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f918d2bd.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Indicator.css'\r\n\r\nexport const Indicator = props => {\r\n    const {stateIndicator} = props\r\n    const cls = ['indicator']\r\n\r\n    if (typeof stateIndicator === \"object\") {\r\n        cls.push('indicator--success')\r\n    }\r\n\r\n    return (\r\n        <span className={`${cls.join(' ')}`} />\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport './AsideListItem.css'\r\nimport {Indicator as IndicatorHasInventory} from \"../../../../UI/Indicator/Indicator\";\r\n\r\n\r\nconst AsideListItem = props => {\r\n    const { place, renderLists, placesItems, allPlaceIdWithHasInventory } = props\r\n\r\n    const stateIndicator = allPlaceIdWithHasInventory?.includes(place.id)\r\n        && placesItems.find(el => el.id === place.id ? el : null)\r\n\r\n    return (\r\n        <li className=\"aside-list__item\">\r\n            <p className=\"aside-list__paragraph\"\r\n                id={ place.id }>\r\n                { place.data?.name }\r\n\r\n                <IndicatorHasInventory\r\n                    stateIndicator={stateIndicator}\r\n                />\r\n            </p>\r\n\r\n            {place.parts ? renderLists(place.parts) : null}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AsideListItem\r\n","import React, {Component} from 'react'\r\nimport AsideListItem from \"./AsideListItem/AsideListItem\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nclass AsideList extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"aside-list\"\r\n                onClick={e => this.props.onClickPlaceHandler.call(this.props.context, e)}\r\n            >\r\n                {this.props.places.map( place  => {\r\n                    if ( this.props.housesId.includes(place.id) ) {\r\n                        return (\r\n                            <AsideListItem\r\n                                key={place.id}\r\n                                place={place}\r\n                                renderLists={this.props.renderLists}\r\n                                placesItems={this.props.places}\r\n                                allPlaceIdWithHasInventory={this.props.allPlaceIdWithHasInventory}\r\n                            />\r\n                        )\r\n                    }\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allPlaceIdWithHasInventory: state.inventory.allPlaceIdWithHasInventory\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(AsideList)\r\n\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyD6DnGbVfdJlDJ_pEOUfDfTDJrA8j3lIs8\",\r\n    authDomain: \"dv-inventory.firebaseapp.com\",\r\n    databaseURL: \"https://dv-inventory.firebaseio.com\",\r\n    projectId: \"dv-inventory\",\r\n    storageBucket: \"dv-inventory.appspot.com\",\r\n    messagingSenderId: \"130062240176\",\r\n    appId: \"1:130062240176:web:ecbca5d29b37d25c6cee75\"\r\n};\r\n\r\nexport const FB = firebase.initializeApp(firebaseConfig);\r\n","export const START_FETCH_PLACES = 'START_FETCH_PLACES'\r\nexport const SUCCESS_FETCH_PLACES = 'SUCCESS_FETCH_PLACES'\r\nexport const ERROR_FETCH_PLACES = 'ERROR_FETCH_PLACES'\r\n\r\nexport const START_FETCH_INVENTORY = 'START_FETCH_INVENTORY'\r\nexport const SUCCESS_FETCH_INVENTORY = 'SUCCESS_FETCH_INVENTORY'\r\nexport const ERROR_FETCH_INVENTORY = 'ERROR_FETCH_INVENTORY'\r\nexport const REMOVE_INVENTORY_ITEM = 'REMOVE_INVENTORY_ITEM'\r\nexport const ADD_INVENTORY_ITEM = 'ADD_INVENTORY_ITEM'\r\nexport const UPDATE_INVENTORY_ITEM = 'UPDATE_INVENTORY_ITEM'\r\n\r\nexport const SET_CURRENT_INVENTORY = 'SET_CURRENT_INVENTORY'\r\nexport const SET_CURRENT_PLACE = 'SET_CURRENT_PLACE'\r\n\r\nexport const SET_CHILDREN_PLACE_WITH_HAS_INVENTORY = 'SET_CHILDREN_PLACE_WITH_HAS_INVENTORY'\r\nexport const SET_INVENTORY_PLACE_CHILDREN = 'SET_INVENTORY_PLACE_CHILDREN'\r\n\r\nexport const ALL_PLACE_ID_WITH_HAS_INVENTORY= 'ALL_PLACE_ID_WITH_HAS_INVENTORY'","import { FB } from \"../../helpers/firebaseInit\";\r\nimport {\r\n    ERROR_FETCH_PLACES,\r\n    SET_CHILDREN_PLACE_WITH_HAS_INVENTORY,\r\n    SET_CURRENT_PLACE,\r\n    START_FETCH_PLACES,\r\n    SUCCESS_FETCH_PLACES\r\n} from \"./actionType\";\r\n\r\nexport const fetchPlaces = () => {\r\n    return async dispatch => {\r\n        dispatch(startFetchPlaces())\r\n\r\n        try {\r\n            const response = await FB.firestore().collection(\"places\").get()\r\n\r\n            let places = response.docs.map(x => ({\r\n                id: x.id,\r\n                data: x.data(),\r\n                parts: x.data().parts && x.data().parts.map(part => part.id)\r\n            }));\r\n\r\n            dispatch(successFetchPlaces(places))\r\n        } catch (e) {\r\n            dispatch(errorFetchPlaces(e))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startFetchPlaces = () => {\r\n    return {\r\n        type: START_FETCH_PLACES\r\n    }\r\n}\r\n\r\nexport const successFetchPlaces = placesItems => {\r\n    return {\r\n        type: SUCCESS_FETCH_PLACES,\r\n        placesItems\r\n    }\r\n}\r\n\r\nexport const errorFetchPlaces = error => {\r\n    return {\r\n        type: ERROR_FETCH_PLACES,\r\n        error\r\n    }\r\n}\r\n\r\nexport const setCurrentPlace = placeId => {\r\n    return {\r\n        type: SET_CURRENT_PLACE,\r\n        placeId\r\n    }\r\n}\r\n\r\nexport const setPlaceChildrenHasInventory = allPlaceIdWithHasInventory => {\r\n    return {\r\n        type: SET_CHILDREN_PLACE_WITH_HAS_INVENTORY,\r\n        allPlaceIdWithHasInventory\r\n    }\r\n}\r\n","import { FB } from \"../../helpers/firebaseInit\";\r\nimport {\r\n    ADD_INVENTORY_ITEM,\r\n    ALL_PLACE_ID_WITH_HAS_INVENTORY,\r\n    ERROR_FETCH_INVENTORY, REMOVE_INVENTORY_ITEM,\r\n    SET_CURRENT_INVENTORY,\r\n    SET_INVENTORY_PLACE_CHILDREN,\r\n    START_FETCH_INVENTORY,\r\n    SUCCESS_FETCH_INVENTORY, UPDATE_INVENTORY_ITEM\r\n} from \"./actionType\";\r\n\r\n\r\nexport const fetchInventory = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await FB.firestore().collection(\"inventory\").get()\r\n\r\n            let inventoryItems = response.docs.map(x => ({\r\n                id: x.id,\r\n                data: x.data(),\r\n                placeId: x.data().place?.id\r\n            }));\r\n\r\n            console.log('inventoryItems', inventoryItems);\r\n            dispatch(successFetchInventory(inventoryItems))\r\n        } catch (e) {\r\n            dispatch(errorFetchInventory(e))\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startFetchInventory = () => {\r\n    return {\r\n        type: START_FETCH_INVENTORY\r\n    }\r\n}\r\n\r\nexport const successFetchInventory = inventoryItems => {\r\n    return {\r\n        type: SUCCESS_FETCH_INVENTORY,\r\n        inventoryItems\r\n    }\r\n}\r\n\r\nexport const errorFetchInventory = error => {\r\n    return {\r\n        type: ERROR_FETCH_INVENTORY,\r\n        error\r\n    }\r\n}\r\n\r\nexport const setInventoryCurrentPlace = placeId => {\r\n    return {\r\n        type: SET_CURRENT_INVENTORY,\r\n        placeId\r\n    }\r\n}\r\n\r\nexport const setInventoryPlaceChildren = (inventoryItems, childrenPlaceHasInventoryArray) => {\r\n    return {\r\n        type: SET_INVENTORY_PLACE_CHILDREN,\r\n        inventoryItems,\r\n        childrenPlaceHasInventoryArray\r\n    }\r\n}\r\n\r\nexport const setAllPlaceIdWithHasInventory = placesItems => {\r\n    return {\r\n        type: ALL_PLACE_ID_WITH_HAS_INVENTORY,\r\n        placesItems\r\n    }\r\n}\r\n\r\nexport const removeInventoryItem = id => {\r\n    return {\r\n        type: REMOVE_INVENTORY_ITEM,\r\n        id\r\n    }\r\n}\r\n\r\nexport const addInventoryItem = (placeId, placesItems) => {\r\n    return {\r\n        type: ADD_INVENTORY_ITEM,\r\n        placeId,\r\n        placesItems\r\n    }\r\n}\r\n\r\nexport const editInventoryItem = (id, idCurrentPlace) => {\r\n    return {\r\n        type: UPDATE_INVENTORY_ITEM,\r\n        id,\r\n        idCurrentPlace\r\n    }\r\n}\r\n","import React, {Component} from 'react'\r\nimport { difference as getIdHouses } from 'lodash'\r\nimport { flattenDeep as flattenInCommonArray } from 'lodash'\r\nimport AsideList from \"./AsideList/AsideList\";\r\nimport './Aside.css'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    fetchPlaces,\r\n    setCurrentPlace,\r\n    setPlaceChildrenHasInventory\r\n} from \"../../redux/actions/places\";\r\nimport {fetchInventory, setInventoryCurrentPlace} from \"../../redux/actions/inventory\";\r\n\r\n\r\nclass Aside extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchPlaces()\r\n        this.props.fetchInventory()\r\n    }\r\n\r\n    onClickPlaceHandler(event) {\r\n        event.stopPropagation()\r\n        const target = event.target\r\n\r\n        if (target.id !== '') {\r\n            this.props.setCurrentPlace(target.id)\r\n            this.props.setInventoryCurrentPlace(target.id)\r\n            this.props.setPlaceChildrenHasInventory(this.props.allPlaceIdWithHasInventory)\r\n        }\r\n    }\r\n\r\n    getIdParts() {\r\n        const places = this.props.places.filter(place => place.parts)\r\n        const parts = places.map(part => part.parts)\r\n\r\n        return flattenInCommonArray(parts)\r\n    }\r\n\r\n    renderListHouses() {\r\n        const allPlacesId = this.props.places.map(place => place.id);\r\n        const allPartsId = this.getIdParts();\r\n        const housesId = getIdHouses(allPlacesId, allPartsId)\r\n\r\n        const renderLists = array => {\r\n            return (\r\n                <AsideList\r\n                    places={this.props.places}\r\n                    housesId={array}\r\n                    renderLists={renderLists}\r\n                    onClickPlaceHandler={this.onClickPlaceHandler}\r\n                    context={this}\r\n                />\r\n            )\r\n        }\r\n\r\n        return renderLists(housesId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <aside className=\"main-aside\">\r\n                { !this.props.isLoading && this.renderListHouses() }\r\n            </aside>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        places: state.places.placesItems,\r\n        isLoading: state.places.isLoading,\r\n        allPlaceIdWithHasInventory: state.inventory.allPlaceIdWithHasInventory,\r\n        childrenPlaceHasInventoryArray: state.places.childrenPlaceHasInventoryArray\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetchPlaces: () => dispatch(fetchPlaces()),\r\n        fetchInventory: () => dispatch(fetchInventory()),\r\n        setCurrentPlace: placeId => dispatch(setCurrentPlace(placeId)),\r\n        setInventoryCurrentPlace: placeId => dispatch(setInventoryCurrentPlace(placeId)),\r\n        setPlaceChildrenHasInventory: allPlaceIdWithHasInventory => dispatch(setPlaceChildrenHasInventory(allPlaceIdWithHasInventory)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Aside)\r\n","import React, {Component} from 'react'\r\nimport './ListPlaceChildrenInventory.css'\r\nimport {connect} from \"react-redux\";\r\nimport {removeInventoryItem} from \"../../../redux/actions/inventory\";\r\n\r\nclass ListPlaceChildrenInventory extends Component {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"list-main\">\r\n                {this.props.childrenInventory.map(inventory => {\r\n                    // if (this.props.childrenPlaceId === inventory.placeId) {\r\n                        return (\r\n                            <li className=\"list-main__item\" key={inventory.id}>\r\n                                <p className=\"list-main__paragraph\">{inventory.data.name} - {inventory.data.count} - шт.</p>\r\n                            </li>\r\n                        )\r\n                    })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeInventoryItem: id => dispatch(removeInventoryItem(id))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ListPlaceChildrenInventory)\r\n","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport './PlaceChildren.css'\r\nimport ListPlaceChildrenInventory from \"../ListPlaceChildrenInventory/ListPlaceChildrenInventory\";\r\n\r\n\r\nclass PlaceChildren extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>{\r\n                this.props.childrenPlaceHasInventoryArray?.map(childrenPlace => {\r\n                    if (childrenPlace.parts) return\r\n\r\n                    return (\r\n                        <div className=\"main__wrapper\" key={childrenPlace.id}>\r\n                            <h2 className=\"main__title title\">{childrenPlace.data.name}</h2>\r\n\r\n                            <ListPlaceChildrenInventory\r\n                                childrenInventory={this.props.childrenInventory}\r\n                                childrenPlaceId={childrenPlace.id}\r\n                            />\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        childrenPlaceHasInventoryArray: state.places.childrenPlaceHasInventoryArray,\r\n        childrenInventory: state.inventory.childrenInventory\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PlaceChildren)","import React, {Component} from 'react'\r\nimport './ListPlaceInventory.css'\r\nimport {connect} from \"react-redux\";\r\nimport {editInventoryItem, removeInventoryItem} from \"../../../redux/actions/inventory\";\r\n\r\nclass ListPlaceInventory extends Component {\r\n\r\n    removeInventoryHandler(name, id) {\r\n        if (!window.confirm(`Вы хотите удалить ${name}`)) return\r\n\r\n        this.props.removeInventoryItem(id)\r\n    }\r\n\r\n    editInventoryHandler(id) {\r\n        this.props.editInventoryItem(id, this.props.idCurrentPlace)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className=\"list-main\">\r\n                {this.props.contentIteration.map(item => {\r\n                    return (\r\n                        <li className=\"list-main__item\" key={item.id}>\r\n                            <p className=\"list-main__paragraph\">{item.data.name} - {item.data.count} - шт.</p>\r\n\r\n                            <div className=\"list-main__wrapper\">\r\n                                <p  className=\"list-main__paragraph list-main__paragraph--remove\"\r\n                                    onClick={() => this.removeInventoryHandler(item.data.name, item.id)}>Удалить</p>\r\n\r\n                                <span className=\"list-main__separator\">/</span>\r\n\r\n                                <p  className=\"list-main__paragraph list-main__paragraph--edit\"\r\n                                    onClick={() => this.editInventoryHandler(item.id)}>Редактировать</p>\r\n                            </div>\r\n                        </li>\r\n\r\n                    )\r\n                })}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        removeInventoryItem: id => dispatch(removeInventoryItem(id)),\r\n        editInventoryItem: (id, idCurrentPlace) => dispatch(editInventoryItem(id, idCurrentPlace))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        idCurrentPlace: state.places.currentPlace.id\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListPlaceInventory)","import React from 'react'\r\nimport './Button.css'\r\n\r\nexport const Button = props => {\r\n    const {children, onClick} = props\r\n\r\n    return (\r\n        <button onClick={onClick} className=\"button\">\r\n            {children}\r\n        </button>\r\n    )\r\n}","import React, {Component} from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport PlaceChildren from \"./PlaceChildren/PlaceChildren\";\r\nimport './Main.css'\r\nimport ListPlaceInventory from \"./ListPlaceInventory/ListPlaceInventory\";\r\nimport {addInventoryItem} from \"../../redux/actions/inventory\";\r\nimport {Button} from \"../../UI/Button/Button\";\r\n\r\nclass Main extends Component {\r\n\r\n    hasNotChildrenPlace = () => !this.props.currentPlace?.parts?.length\r\n    hasCurrentInventory = () => this.props.currentInventory?.length\r\n    hasCurrentPlace = () => this.props.currentPlace\r\n\r\n    addInventoryItemHandler = () => this.props.addInventoryItem(this.props.currentPlace?.id, this.props.places)\r\n\r\n    render() {\r\n        return (\r\n            <main className=\"main\">\r\n                <div className=\"container\">\r\n                    {!this.props.isLoading && (\r\n                        <>\r\n                            <h1 className=\"main__title title\">{this.props.currentPlace?.data.name}</h1>\r\n\r\n                            {this.hasCurrentInventory()\r\n                                ? <ListPlaceInventory\r\n                                    contentIteration={this.props.currentInventory}\r\n                                  />\r\n                                :  this.props.childrenPlaceHasInventoryArray?.length === 0\r\n                                ? <p className=\"main__paragraph\">Нет Оборудования</p> : null\r\n                            }\r\n\r\n\r\n                            {this.hasNotChildrenPlace() && this.hasCurrentPlace() &&\r\n                                <Button onClick={this.addInventoryItemHandler.bind(this)}>\r\n                                    Добавить инвентарь\r\n                                </Button>\r\n                            }\r\n\r\n                            <PlaceChildren />\r\n                        </>\r\n                        )\r\n                    }\r\n                </div>\r\n            </main>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        places: state.places.placesItems,\r\n        currentPlace: state.places.currentPlace,\r\n        isLoading: state.inventory.isLoading,\r\n        currentInventory: state.inventory.currentInventory,\r\n        childrenPlaceHasInventoryArray: state.places.childrenPlaceHasInventoryArray,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addInventoryItem: (placeId, placesItems) => dispatch(addInventoryItem(placeId, placesItems))\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\r\n","import './App.css';\r\nimport React, {Component} from 'react'\r\nimport Aside from \"./components/Aside/Aside\";\r\nimport Main from \"./components/Main/Main\";\r\n\r\nclass App extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"section-app\">\r\n        <Aside />\r\n        <Main/>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import {flattenDeep as flattenPartsIdPlaceChildrenInCommonArray} from 'lodash'\r\nimport {intersection as getIdPlaceChildrenHasInventory} from 'lodash'\r\nimport {uniq as uniq} from 'lodash'\r\n\r\nexport const findCurrentPlace = (placesItems, placeId) => placesItems.find(el => el.id === placeId)\r\n\r\nexport const findAllPlaceIdWithHasInventory = (inventoryItems, placesItems) => {\r\n    const allPlaceIdWithHasInventory = inventoryItems?.map(el => el.placeId)\r\n\r\n    const findDeepRecursionPlaceId = (placeId, placesItems) => {\r\n        placesItems?.find(place => {\r\n            if (place.parts?.includes( placeId )) {\r\n                allPlaceIdWithHasInventory.push(place.id)\r\n\r\n                findDeepRecursionPlaceId(place.id, placesItems)\r\n            }\r\n        })\r\n    }\r\n\r\n    allPlaceIdWithHasInventory.map(placeId => {\r\n        return findDeepRecursionPlaceId(placeId, placesItems)\r\n    })\r\n\r\n    return uniq(allPlaceIdWithHasInventory)\r\n}\r\n\r\nexport const findPlaceChildrenWithHasInventory = (state, allPlaceIdWithHasInventory) => {\r\n    const currentPlace = state.currentPlace\r\n    const placesItems = state.placesItems\r\n\r\n    let partsIdAtPlaceChildren = []\r\n\r\n    currentPlace.parts?.forEach(part => {\r\n        partsIdAtPlaceChildren.push(part)\r\n\r\n        placesItems.forEach(place => {\r\n            if ( place.id === part && place.parts) {\r\n                partsIdAtPlaceChildren.push( place.parts )\r\n            }\r\n        })\r\n    })\r\n\r\n    partsIdAtPlaceChildren = flattenPartsIdPlaceChildrenInCommonArray(partsIdAtPlaceChildren)\r\n    const idPlaceChildrenHasInventory = getIdPlaceChildrenHasInventory( allPlaceIdWithHasInventory, partsIdAtPlaceChildren)\r\n\r\n\r\n    const childrenPlaceHasInventoryArray = []\r\n\r\n    for( let i = 0; i < idPlaceChildrenHasInventory.length; i++) {\r\n        placesItems.find(el => {\r\n            if (el.id === idPlaceChildrenHasInventory[i] ) {\r\n                childrenPlaceHasInventoryArray.push(el)\r\n            }\r\n        })\r\n    }\r\n\r\n    return childrenPlaceHasInventoryArray\r\n}\r\n","import {\r\n    ERROR_FETCH_PLACES, SET_CHILDREN_PLACE_WITH_HAS_INVENTORY,\r\n    SET_CURRENT_PLACE,\r\n    START_FETCH_PLACES,\r\n    SUCCESS_FETCH_PLACES\r\n} from \"../actions/actionType\";\r\nimport {findCurrentPlace, findPlaceChildrenWithHasInventory} from \"../helpers/places\";\r\n\r\n\r\nconst initialState = {\r\n    placesItems: [],\r\n    childrenPlaceHasInventoryArray: null,\r\n    isLoading: true,\r\n    currentPlace: null,\r\n    error: null\r\n}\r\n\r\nconst places = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case START_FETCH_PLACES:\r\n            return {\r\n                isLoading: true\r\n            }\r\n        case SUCCESS_FETCH_PLACES:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                placesItems: action.placesItems\r\n            }\r\n        case ERROR_FETCH_PLACES:\r\n            return {\r\n                isLoading: false,\r\n                error: action.error\r\n            }\r\n        case SET_CURRENT_PLACE:\r\n            return {\r\n                ...state,\r\n                currentPlace: findCurrentPlace(\r\n                    [...state.placesItems], action.placeId\r\n                )\r\n            }\r\n        case SET_CHILDREN_PLACE_WITH_HAS_INVENTORY:\r\n            return {\r\n                ...state,\r\n                childrenPlaceHasInventoryArray: findPlaceChildrenWithHasInventory(\r\n                    { ...state},\r\n                    action.allPlaceIdWithHasInventory\r\n                )\r\n            }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport default places\r\n","import {fetchAddInventoryItem, fetchRemoveInventoryItem, fetchUpdateInventoryItem} from \"../services/inventory\";\r\n\r\nexport const findInventoryCurrentPlace =  (inventoryItems, placeId) => {\r\n    return inventoryItems.filter(el => el.placeId === placeId ? el.data : null)\r\n}\r\n\r\nexport const findInventoryPlaceChildren = (inventoryItems, childrenPlaceHasInventoryArray) => {\r\n    const idChildrenPlaceHasInventoryArray = []\r\n\r\n    childrenPlaceHasInventoryArray.forEach(childrenPlace => {\r\n        idChildrenPlaceHasInventoryArray.push(childrenPlace.id)\r\n    })\r\n\r\n    const childrenInventory = []\r\n\r\n    idChildrenPlaceHasInventoryArray.forEach( idChildren => {\r\n        inventoryItems.find(inventoryItem => {\r\n            if (inventoryItem.placeId === idChildren) {\r\n                childrenInventory.push(inventoryItem)\r\n            }\r\n        })\r\n    })\r\n\r\n    return childrenInventory\r\n}\r\n\r\nexport const removeInventoryItem = (array, id) => {\r\n\r\n    fetchRemoveInventoryItem(id)\r\n    return array.filter(el => el.id !== id)\r\n}\r\n\r\nexport const addInventoryItem = (place, placeId) => {\r\n    const name = window.prompt('Введите название предмета')\r\n    const count = window.prompt('Введите кол-во предметов', '1')\r\n\r\n    const objInventory = {\r\n        id: Math.random().toString(),\r\n        placeId,\r\n        data: {name, count, place}\r\n    }\r\n\r\n    fetchAddInventoryItem(objInventory)\r\n    return objInventory\r\n}\r\n\r\nexport const updateInventoryItem = (array, id, idCurrentPlace) => {\r\n    const name = window.prompt('Введите новое название предмета')\r\n    const count = window.prompt('Введите новое кол-во предметов', '2')\r\n\r\n\r\n    array.map(el => {\r\n        if (el.id === id) {\r\n            el.data.name = name\r\n            el.data.count = count\r\n        } else {\r\n           return el\r\n        }\r\n    })\r\n\r\n    fetchUpdateInventoryItem(id, name, count, idCurrentPlace)\r\n\r\n    return array\r\n}\r\n","import firebase from \"firebase\";\r\n\r\nexport const fetchRemoveInventoryItem = id => {\r\n    firebase.firestore().collection(\"inventory\").doc(id).delete().then(() => {\r\n        console.info(\"Success Delete Inventory Item\");\r\n    });\r\n}\r\n\r\nexport const fetchAddInventoryItem = ({placeId, data: {name, count} }) => {\r\n    let fileStore = firebase.firestore();\r\n\r\n    fileStore.collection(\"inventory\").doc().set({\r\n        name,\r\n        count,\r\n        place: fileStore.collection(\"places\").doc(placeId)\r\n    }).then(() => {\r\n        console.info(\"Success Add Inventory Item\");\r\n    });\r\n}\r\n\r\nexport const fetchUpdateInventoryItem = (id, name, count, placeId) => {\r\n    let fileStore = firebase.firestore();\r\n\r\n    firebase.firestore().collection(\"inventory\").doc(id).set({\r\n        name,\r\n        count,\r\n        place: fileStore.collection(\"places\").doc(placeId)\r\n    }).then(() => {\r\n        console.info(\"Success Update Inventory Item\");\r\n    });\r\n}","import {\r\n    ADD_INVENTORY_ITEM,\r\n    ALL_PLACE_ID_WITH_HAS_INVENTORY,\r\n    ERROR_FETCH_INVENTORY, REMOVE_INVENTORY_ITEM,\r\n    SET_CURRENT_INVENTORY, SET_INVENTORY_PLACE_CHILDREN,\r\n    START_FETCH_INVENTORY,\r\n    SUCCESS_FETCH_INVENTORY, UPDATE_INVENTORY_ITEM\r\n} from \"../actions/actionType\";\r\nimport {\r\n    findInventoryCurrentPlace,\r\n    findInventoryPlaceChildren,\r\n    removeInventoryItem,\r\n    addInventoryItem,\r\n    updateInventoryItem\r\n} from \"../helpers/inventory\";\r\nimport {findAllPlaceIdWithHasInventory} from \"../helpers/places\";\r\n\r\n\r\nconst initialState = {\r\n    inventoryItems: [],\r\n    currentInventory: null,\r\n    childrenInventory: null,\r\n    allPlaceIdWithHasInventory: null,\r\n    isLoading: true,\r\n    error: null\r\n}\r\n\r\nconst inventory = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case START_FETCH_INVENTORY:\r\n            return {\r\n                ...state,\r\n                isLoading: true\r\n            }\r\n        case SUCCESS_FETCH_INVENTORY:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                inventoryItems: action.inventoryItems\r\n            }\r\n        case ERROR_FETCH_INVENTORY:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                error: action.error\r\n            }\r\n        case SET_CURRENT_INVENTORY:\r\n            return {\r\n                ...state,\r\n                currentInventory: findInventoryCurrentPlace(\r\n                    [...state.inventoryItems],\r\n                    action.placeId\r\n                )\r\n            }\r\n        case ALL_PLACE_ID_WITH_HAS_INVENTORY:\r\n            return {\r\n                ...state,\r\n                allPlaceIdWithHasInventory: findAllPlaceIdWithHasInventory(\r\n                    [...state.inventoryItems],\r\n                    action.placesItems\r\n                )\r\n            }\r\n        case SET_INVENTORY_PLACE_CHILDREN:\r\n            return {\r\n                ...state,\r\n                childrenInventory: findInventoryPlaceChildren(\r\n                    action.inventoryItems,\r\n                    action.childrenPlaceHasInventoryArray\r\n                )\r\n            }\r\n        case REMOVE_INVENTORY_ITEM:\r\n            return {\r\n                ...state,\r\n                inventoryItems: removeInventoryItem([...state.inventoryItems], action.id),\r\n                currentInventory: removeInventoryItem([...state.currentInventory], action.id),\r\n                childrenInventory: removeInventoryItem([...state.childrenInventory], action.id),\r\n            }\r\n        case ADD_INVENTORY_ITEM:\r\n            const place = state.inventoryItems[0]?.data.place\r\n            const newInventory = addInventoryItem(place, action.placeId)\r\n\r\n            return {\r\n                ...state,\r\n                inventoryItems: [...state.inventoryItems, newInventory],\r\n                currentInventory: [...state.currentInventory, newInventory]\r\n            }\r\n        case UPDATE_INVENTORY_ITEM:\r\n            const inventoryItems = [...state.inventoryItems]\r\n\r\n            return {\r\n                ...state,\r\n                inventoryItems: updateInventoryItem(inventoryItems, action.id, action.idCurrentPlace),\r\n            }\r\n    }\r\n\r\n    return state\r\n}\r\n\r\nexport default inventory\r\n","import places from \"./places\";\r\nimport inventory from \"./inventory\";\r\n\r\nconst {combineReducers} = require(\"redux\");\r\n\r\n\r\nexport default combineReducers({\r\n    places,\r\n    inventory\r\n})\r\n\r\n","import {\r\n    ADD_INVENTORY_ITEM,\r\n    REMOVE_INVENTORY_ITEM,\r\n    SET_CHILDREN_PLACE_WITH_HAS_INVENTORY,\r\n    SUCCESS_FETCH_INVENTORY, UPDATE_INVENTORY_ITEM\r\n} from \"../actions/actionType\";\r\nimport {takeEvery, put, select} from 'redux-saga/effects'\r\nimport {setAllPlaceIdWithHasInventory, setInventoryCurrentPlace, setInventoryPlaceChildren} from \"../actions/inventory\";\r\n\r\nconst getPlacesItems = state => [...state.places.placesItems]\r\nconst getInventoryItems = state => [...state.inventory.inventoryItems]\r\nconst getChildrenPlaceHasInventoryArray = state => [...state.places.childrenPlaceHasInventoryArray]\r\nconst getCurrentPlace = state => [...state.places.currentPlace.id]\r\n\r\nexport function* allPlaceIdWithHasInventoryWatcher() {\r\n    yield takeEvery(SUCCESS_FETCH_INVENTORY, allPlaceIdWithHasInventoryWorker)\r\n}\r\n\r\nexport function* addInventoryWatcher() {\r\n    yield takeEvery(ADD_INVENTORY_ITEM, allPlaceIdWithHasInventoryWorker)\r\n}\r\n\r\nexport function* removeInventoryWatcher() {\r\n    yield takeEvery(REMOVE_INVENTORY_ITEM, allPlaceIdWithHasInventoryWorker)\r\n}\r\n\r\nfunction* allPlaceIdWithHasInventoryWorker() {\r\n    const places = yield select(getPlacesItems);\r\n    yield put(setAllPlaceIdWithHasInventory(places))\r\n}\r\n\r\n\r\n\r\nexport function* setPlaceChildrenHasInventoryWatcher() {\r\n    yield takeEvery(SET_CHILDREN_PLACE_WITH_HAS_INVENTORY, setPlaceChildrenHasInventoryWorker)\r\n}\r\n\r\nfunction* setPlaceChildrenHasInventoryWorker() {\r\n    const inventoryItems = yield select(getInventoryItems)\r\n    const childrenPlaceHasInventoryArray = yield select(getChildrenPlaceHasInventoryArray)\r\n\r\n    yield put(setInventoryPlaceChildren(inventoryItems, childrenPlaceHasInventoryArray))\r\n}\r\n\r\n\r\n\r\nexport function* updateInventoryItemWatcher() {\r\n    yield takeEvery(UPDATE_INVENTORY_ITEM, updateInventoryItemWorker)\r\n}\r\n\r\nfunction* updateInventoryItemWorker() {\r\n    const placeId = yield select(getCurrentPlace)\r\n    yield put(setInventoryCurrentPlace(placeId.join('')))\r\n}\r\n","import {all} from 'redux-saga/effects'\r\nimport {\r\n    addInventoryWatcher,\r\n    allPlaceIdWithHasInventoryWatcher,\r\n    removeInventoryWatcher,\r\n    setPlaceChildrenHasInventoryWatcher, updateInventoryItemWatcher\r\n} from \"./sagas\";\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield all([\r\n        allPlaceIdWithHasInventoryWatcher(),\r\n        addInventoryWatcher(),\r\n        removeInventoryWatcher(),\r\n        setPlaceChildrenHasInventoryWatcher(),\r\n        updateInventoryItemWatcher()\r\n    ])\r\n}","import React from 'react';\r\nimport './index.css'\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {applyMiddleware, compose, createStore} from \"redux\";\r\nimport combineReducers from \"./redux/reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from \"./redux/sagas/rootSaga\";\r\n\r\nconst saga = createSagaMiddleware()\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) : compose;\r\n\r\nconst store = createStore(combineReducers, composeEnhancers(\r\n    applyMiddleware(thunk, saga)\r\n))\r\n\r\nsaga.run(rootSaga)\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>\r\n)\r\n\r\n\r\nReactDOM.render(\r\n    app,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}